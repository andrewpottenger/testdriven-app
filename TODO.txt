Part 4 TODOS
1. Try re-factoring 'FormErrors.test.js' into a for loop, like we did with the form component tests.

2. Validation logic for validateForm() and validateEmail() in our unit tests.

3.User does not exist isn't really accurate if the error was due to an incorrect password.
Login failed is probably a better generic error message. Check your understanding and
update this on your own.

4. Is there any way to mock the wait time so that the test doesn't actually take an extra four
seconds to run?

5. Test feature-branch


Build, tag, and push Docker image
Now that your repository exists, you can push a Docker image by following these steps:
Successfully created repository
914936742511.dkr.ecr.us-west-2.amazonaws.com/test-driven-users
To install the AWS CLI and Docker and for more information on the steps below, visit the ECR documentation page.
1) Retrieve the docker login command that you can use to authenticate your Docker client to your registry:
Note:
If you receive an "Unknown options: --no-include-email" error, install the latest version of the AWS CLI. Learn more
aws ecr get-login --no-include-email --region us-west-2

2) Run the docker login command that was returned in the previous step.
Note:
If you are using Windows PowerShell, run the following command instead.
Invoke-Expression -Command (aws ecr get-login --no-include-email --region us-west-2)

3) Build your Docker image using the following command. For information on building a Docker file from scratch see the instructions here. You can skip this step if your image is already built:
docker build -t test-driven-users .

4) After the build completes, tag your image so you can push the image to this repository:
docker tag test-driven-users:latest 914936742511.dkr.ecr.us-west-2.amazonaws.com/test-driven-users:latest

5) Run the following command to push this image to your newly created AWS repository:
docker push 914936742511.dkr.ecr.us-west-2.amazonaws.com/test-driven-users:latest